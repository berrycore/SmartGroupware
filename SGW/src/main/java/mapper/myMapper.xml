<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.myMapper">

	<!-- SM_COMPANY -->
	<select id="getCompany" parameterType="String" resultType="model.Company">
		select * from SM_COMPANY where company_id = #{company_id}
	</select>

	<!-- SM_USERS -->
	<select id="getUserAccount" parameterType="String" resultType="model.User">
		select * from SM_USERS where user_id = #{user_id}
	</select>
	<select id="getUserAccountCount" parameterType="String" resultType="Integer">
		select count(*) from SM_USERS where user_id = #{user_id} 
	</select>
	
	<!-- getUserList  -->
	<resultMap type="model.Team" id="Team">
		<result column="TEAM_ID" property="team_id" />
		<result column="TEAM_NAME" property="team_name" />
	</resultMap>
	<resultMap type="model.Position" id="Position">
		<result column="POSITION_ID" property="position_id" />
		<result column="POSITION_NAME" property="position_name" />
	</resultMap>
	<resultMap type="model.User" id="UserJoin">
		<result column="user_id" property="user_id" />
		<result column="user_name" property="user_name" />
		<result column="user_email" property="user_email" />
		<result column="user_phone" property="user_phone" />
		<result column="user_description" property="user_description" />
		<result column="user_date_last_login" property="user_date_last_login" />
		<result column="user_date_last_pw_changed" property="user_date_last_pw_changed" />
		<collection property="team" resultMap="Team" />
		<collection property="position" resultMap="Position" />
	</resultMap>
	<select id="getUserList" resultMap="UserJoin">
		SELECT 
			U.USER_ID, 
			U.USER_NAME,
			U.USER_EMAIL,
			U.USER_PHONE,
			U.USER_DESCRIPTION,
			U.USER_DATE_LAST_LOGIN,
			U.USER_DATE_LAST_PW_CHANGED,
			T.TEAM_NAME, 
			P.POSITION_NAME
		FROM SM_USERS U, SM_TEAMS T, SM_POSITION P 
		WHERE U.TEAM_ID = T.TEAM_ID AND U.POSITION_ID = P.POSITION_ID
	</select>
	
	<!-- getUserByUserId -->
	<select id="getUserByUserId" resultMap="UserJoin" parameterType="String">
		SELECT 
			U.USER_ID, 
			U.USER_NAME,
			U.USER_EMAIL,
			U.USER_PHONE,
			U.USER_DESCRIPTION,
			U.USER_DATE_LAST_LOGIN,
			U.USER_DATE_LAST_PW_CHANGED,
			T.TEAM_NAME, 
			P.POSITION_NAME
		FROM SM_USERS U, SM_TEAMS T, SM_POSITION P 
		WHERE U.TEAM_ID = T.TEAM_ID AND U.POSITION_ID = P.POSITION_ID AND U.USER_ID = #{user_id}
	</select>
	
	<insert id="insertUser" parameterType="model.User">
		insert into SM_USERS (
			user_id,
			user_password,
			user_name,
			user_email,
			user_phone,
			user_description,
			team_id,
			position_id
		) 
		values(
			#{user_id},
			#{user_password},
			#{user_name},
			#{user_email},
			#{user_phone},
			#{user_description},
			#{team_id},
			#{position_id}
		)
	</insert>
	
	<update id="updateUserInfo" parameterType="model.User">
		update SM_USERS set
			user_phone = #{user_phone},
			user_description = #{user_description}
		where
			user_id = #{user_id}
	</update>
	<update id="updateUserPassword" parameterType="model.User">
		update SM_USERS set
			user_password = #{user_password},
			user_date_last_pw_changed = #{user_date_last_pw_changed}
		where
			user_id = #{user_id}
	</update>
	
	
	<!-- SM_TEAMS -->
	<select id="getTeamList" resultType="model.Team">
		select * from SM_TEAMS
	</select>
	<select id="getTeamCount" resultType="Integer">
		select count(*) from SM_TEAMS
	</select>
	<insert id="insertTeam" parameterType="model.Team">
		insert into SM_TEAMS values(#{team_id}, #{team_name}, #{team_parent_id})
	</insert>
	
	<!-- SM_POSITION -->
	<insert id="insertPosition">
		insert into SM_POSITION  values(#{position_id} ,#{position_name})
	</insert>
	<select id="getPositionCount" resultType="Integer">
		select count(*) from SM_POSITION
	</select>
	<select id="getPositionList" resultType="model.Position" >
		select * from SM_POSITION order by position_id
	</select>
</mapper>
